/* file: parameter.cpp */
/*******************************************************************************
* Copyright 2014-2019 Intel Corporation.
*
* This software and the related documents are Intel copyrighted  materials,  and
* your use of  them is  governed by the  express license  under which  they were
* provided to you (License).  Unless the License provides otherwise, you may not
* use, modify, copy, publish, distribute,  disclose or transmit this software or
* the related documents without Intel's prior written permission.
*
* This software and the related documents  are provided as  is,  with no express
* or implied  warranties,  other  than those  that are  expressly stated  in the
* License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>/* Header for class com_intel_daal_algorithms_quantiles_Offline */

#include "daal.h"
#include "quantiles/JParameter.h"
#include "quantiles/JMethod.h"

#include "common_defines.i"

using namespace daal;
using namespace daal::data_management;
using namespace daal::algorithms;
using namespace daal::services;

/*
 * Class:     com_intel_daal_algorithms_quantiles_Parameter
 * Method:    cSetQuantileOrders
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_quantiles_Parameter_cSetQuantileOrders
(JNIEnv *env, jobject thisObj, jlong parAddr, jlong quantilesAddr)
{
    SerializationIfacePtr *ntShPtr = (SerializationIfacePtr *)quantilesAddr;
    (*(quantiles::Parameter *)parAddr).quantileOrders = staticPointerCast<NumericTable, SerializationIface>(*ntShPtr);
}

/*
 * Class:     com_intel_daal_algorithms_quantiles_Parameter
 * Method:    cGetQuantileOrders
 * Signature: (J)I
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_quantiles_Parameter_cGetQuantileOrders
(JNIEnv *env, jobject thisObj, jlong parAddr)
{
    quantiles::Parameter *parameter = (quantiles::Parameter *)parAddr;
    NumericTablePtr *ntShPtr = new NumericTablePtr();
    *ntShPtr = parameter->quantileOrders;
    return (jlong)ntShPtr;
}
