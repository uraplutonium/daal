/* file: parameter.cpp */
/*******************************************************************************
* Copyright 2014-2019 Intel Corporation.
*
* This software and the related documents are Intel copyrighted  materials,  and
* your use of  them is  governed by the  express license  under which  they were
* provided to you (License).  Unless the License provides otherwise, you may not
* use, modify, copy, publish, distribute,  disclose or transmit this software or
* the related documents without Intel's prior written permission.
*
* This software and the related documents  are provided as  is,  with no express
* or implied  warranties,  other  than those  that are  expressly stated  in the
* License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

#include "daal.h"
#include "pca/transform/JTransformParameter.h"
#include "pca/transform/JTransformMethod.h"

#include "common_defines.i"

using namespace daal;
using namespace daal::algorithms;
using namespace daal::services;

/*
 * Class:     com_intel_daal_algorithms_pca_transform_TransformParameter
 * Method:    cGetLowerBound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_pca_transform_TransformParameter_cGetNumberOfComponents
(JNIEnv *env, jobject thisObj, jlong parAddr)
{
    return (jlong)(reinterpret_cast<pca::transform::Parameter *>(parAddr)->nComponents);
}

/*
 * Class:     com_intel_daal_algorithms_pca_transform_TransformParameter
 * Method:    cSetLowerBound
 * Signature:(JJ)I
 */
JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_pca_transform_TransformParameter_cSetNumberOfComponents
(JNIEnv *env, jobject thisObj, jlong parAddr, jlong nComponents)
{
    reinterpret_cast<pca::transform::Parameter *>(parAddr)->nComponents = nComponents;
}
