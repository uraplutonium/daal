/* file: parameter.cpp */
/*******************************************************************************
* Copyright 2014-2019 Intel Corporation.
*
* This software and the related documents are Intel copyrighted  materials,  and
* your use of  them is  governed by the  express license  under which  they were
* provided to you (License).  Unless the License provides otherwise, you may not
* use, modify, copy, publish, distribute,  disclose or transmit this software or
* the related documents without Intel's prior written permission.
*
* This software and the related documents  are provided as  is,  with no express
* or implied  warranties,  other  than those  that are  expressly stated  in the
* License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>/* Header for class com_intel_daal_algorithms_boosting_Batch */

#include "daal.h"
#include "boosting/JParameter.h"

using namespace daal;
using namespace daal::algorithms;

JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_boosting_Parameter_cSetWlTraining
(JNIEnv *env, jobject thisObj, jlong parAddr, jlong algAddr)
{
    services::SharedPtr<weak_learner::training::Batch> weakLearnerTraining =
        daal::services::staticPointerCast<weak_learner::training::Batch, AlgorithmIface>
            (*(services::SharedPtr<AlgorithmIface> *)algAddr);
    (*(boosting::Parameter *)parAddr).weakLearnerTraining = weakLearnerTraining;
}

JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_boosting_Parameter_cGetWlTraining
(JNIEnv *env, jobject thisObj, jlong parAddr)
{
    return (jlong) & ((*(boosting::Parameter *)parAddr).weakLearnerTraining);
}

JNIEXPORT void JNICALL Java_com_intel_daal_algorithms_boosting_Parameter_cSetWlPrediction
(JNIEnv *env, jobject thisObj, jlong parAddr, jlong algAddr)
{
    services::SharedPtr<weak_learner::prediction::Batch> weakLearnerPrediction =
        daal::services::staticPointerCast<weak_learner::prediction::Batch, AlgorithmIface>
            (*(services::SharedPtr<AlgorithmIface> *)algAddr);
    (*(boosting::Parameter *)parAddr).weakLearnerPrediction = weakLearnerPrediction;
}

JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_boosting_Parameter_cGetWlPrediction
(JNIEnv *env, jobject thisObj, jlong parAddr)
{
    return (jlong) & ((*(boosting::Parameter *)parAddr).weakLearnerPrediction);
}
